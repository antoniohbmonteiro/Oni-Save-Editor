package br.com.antoniomonteiro.oni.saveeditor.ui.theme

import androidx.compose.ui.graphics.Color

// Light Theme Colors
val LightBackground = Color(0xFFFFFFFF)
val LightForeground = Color(0xFF252525) // oklch(0.145 0 0)
val LightCard = Color(0xFFFFFFFF)
val LightCardForeground = Color(0xFF252525) // oklch(0.145 0 0)
val LightPopover = Color(0xFFFFFFFF) // oklch(1 0 0)
val LightPopoverForeground = Color(0xFF252525) // oklch(0.145 0 0)
val LightPrimary = Color(0xFF030213)
val LightPrimaryForeground = Color(0xFFFFFFFF) // oklch(1 0 0)
val LightSecondary = Color(0xFFF0F0F5) // oklch(0.95 0.0058 264.53)
val LightSecondaryForeground = Color(0xFF030213)
val LightMuted = Color(0xFFECECF0)
val LightMutedForeground = Color(0xFF717182)
val LightAccent = Color(0xFFE9EBEF)
val LightAccentForeground = Color(0xFF030213)
val LightDestructive = Color(0xFFD4183D)
val LightDestructiveForeground = Color(0xFFFFFFFF)
val LightBorder = Color(0x1A000000) // rgba(0, 0, 0, 0.1)
val LightInput = Color(0x00000000) // transparent
val LightInputBackground = Color(0xFFF3F3F5)
val LightSwitchBackground = Color(0xFFCBCED4)
val LightRing = Color(0xFFB5B5B5) // oklch(0.708 0 0)

// Dark Theme Colors
val DarkBackground = Color(0xFF0A0E1A)
val DarkForeground = Color(0xFFE8EDF4)
val DarkCard = Color(0xFF121825)
val DarkCardForeground = Color(0xFFE8EDF4)
val DarkPopover = Color(0xFF121825)
val DarkPopoverForeground = Color(0xFFE8EDF4)
val DarkPrimary = Color(0xFF00D4FF)
val DarkPrimaryForeground = Color(0xFF0A0E1A)
val DarkSecondary = Color(0xFF1A2332)
val DarkSecondaryForeground = Color(0xFFE8EDF4)
val DarkMuted = Color(0xFF1A2332)
val DarkMutedForeground = Color(0xFF8B95A8)
val DarkAccent = Color(0xFFFF6B35)
val DarkAccentForeground = Color(0xFFE8EDF4)
val DarkDestructive = Color(0xFFFF3B3B)
val DarkDestructiveForeground = Color(0xFFE8EDF4)
val DarkBorder = Color(0xFF2A3547)
val DarkInput = Color(0xFF1A2332)
val DarkRing = Color(0xFF00D4FF)

// Chart Colors (Common for both themes, or define light/dark specific if needed)
val Chart1Light = Color(0xFFFF9900) // oklch(0.646 0.222 41.116)
val Chart2Light = Color(0xFF00CC66) // oklch(0.6 0.118 184.704)
val Chart3Light = Color(0xFF3366CC) // oklch(0.398 0.07 227.392)
val Chart4Light = Color(0xFFCCFF00) // oklch(0.828 0.189 84.429)
val Chart5Light = Color(0xFFFFCC00) // oklch(0.769 0.188 70.08)

val Chart1Dark = Color(0xFF00D4FF)
val Chart2Dark = Color(0xFF00FF88)
val Chart3Dark = Color(0xFFFF6B35)
val Chart4Dark = Color(0xFFA855F7)
val Chart5Dark = Color(0xFFFBFF24)

// Sidebar Colors (Common for both themes, or define light/dark specific if needed)
val LightSidebar = Color(0xFFFAFAFA) // oklch(0.985 0 0)
val LightSidebarForeground = Color(0xFF252525) // oklch(0.145 0 0)
val LightSidebarPrimary = Color(0xFF030213)
val LightSidebarPrimaryForeground = Color(0xFFFAFAFA) // oklch(0.985 0 0)
val LightSidebarAccent = Color(0xFFF7F7F7) // oklch(0.97 0 0)
val LightSidebarAccentForeground = Color(0xFF353535) // oklch(0.205 0 0)
val LightSidebarBorder = Color(0xFFEBEBEB) // oklch(0.922 0 0)
val LightSidebarRing = Color(0xFFB5B5B5) // oklch(0.708 0 0)

val DarkSidebar = Color(0xFF0D1117)
val DarkSidebarForeground = Color(0xFFE8EDF4)
val DarkSidebarPrimary = Color(0xFF00D4FF)
val DarkSidebarPrimaryForeground = Color(0xFF0A0E1A)
val DarkSidebarAccent = Color(0xFF1A2332)
val DarkSidebarAccentForeground = Color(0xFFE8EDF4)
val DarkSidebarBorder = Color(0xFF2A3547)
val DarkSidebarRing = Color(0xFF00D4FF)
